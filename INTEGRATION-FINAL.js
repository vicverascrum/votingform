// C√ìDIGO FINAL PARA INTEGRAR TU FORMULARIO DE GITHUB PAGES
// Copia este c√≥digo en tu archivo aws-integration.js

// ‚úÖ URL DE LA API FUNCIONANDO
const API_URL = 'http://44.223.24.11/api-simple.php';

// Funci√≥n principal para enviar datos a la base de datos
async function submitToDatabase(formData) {
    try {
        showMessage('Enviando votaci√≥n a la base de datos...', 'info');
        
        // Preparar datos para enviar
        const dataToSend = {
            email: formData.email,
            totalHours: formData.totalHours,
            selectedQuestions: formatSelectedQuestions(formData.selectedItems)
        };
        
        console.log('Enviando datos:', dataToSend);
        
        // Enviar a la API
        const response = await fetch(`${API_URL}?action=submit`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(dataToSend)
        });
        
        const result = await response.json();
        
        if (result.success) {
            showMessage(`‚úÖ Votaci√≥n guardada correctamente (ID: ${result.id})`, 'success');
            
            // Mostrar confirmaci√≥n
            setTimeout(() => {
                if (confirm('¬øQuieres ver todos los resultados de votaci√≥n?')) {
                    window.open('results-dashboard.html', '_blank');
                }
            }, 2000);
            
            return true;
            
        } else {
            throw new Error(result.error || 'Error desconocido');
        }
        
    } catch (error) {
        console.error('Error al enviar:', error);
        showMessage(`‚ùå Error: ${error.message}`, 'error');
        return false;
    }
}

// Funci√≥n para formatear las preguntas seleccionadas
function formatSelectedQuestions(selectedItems) {
    if (!selectedItems || selectedItems.length === 0) {
        return 'Ninguna pregunta seleccionada';
    }
    
    return selectedItems.map((item, index) => {
        const priority = index + 1;
        const complexity = item.complexity || 'Unknown';
        const hours = item.estimatedHours ? `${item.estimatedHours}h` : 'TBD';
        
        return `${priority}. ${item.id} (${complexity}) - ${hours}`;
    }).join(', ');
}

// Funci√≥n para cargar todos los resultados
async function loadAllResults() {
    try {
        const response = await fetch(`${API_URL}?action=results`);
        const data = await response.json();
        
        if (data.success) {
            console.log(`Cargados ${data.count} resultados:`, data.data);
            return data.data;
        } else {
            throw new Error(data.error);
        }
        
    } catch (error) {
        console.error('Error al cargar resultados:', error);
        return [];
    }
}

// REEMPLAZA tu funci√≥n de env√≠o actual con esta:
async function submitFormData(formData) {
    return await submitToDatabase(formData);
}

// Funci√≥n de prueba (opcional)
async function testAPI() {
    try {
        const response = await fetch(`${API_URL}?action=test`);
        const result = await response.json();
        console.log('Test API:', result);
        return result.success;
    } catch (error) {
        console.error('Error en test:', error);
        return false;
    }
}

console.log('üîó Integraci√≥n con base de datos RDS lista');
console.log('üìä API URL:', API_URL);
console.log('‚úÖ Para probar: testAPI()');

// INSTRUCCIONES DE USO:
// 1. Copia todo este c√≥digo
// 2. P√©galo en tu archivo aws-integration.js (reemplazando el c√≥digo AWS anterior)
// 3. ¬°Ya est√°! Tu formulario se conectar√° autom√°ticamente a la base de datos
